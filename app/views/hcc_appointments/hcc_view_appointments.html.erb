<div class="appointments-container">
  <div class="tab-buttons">
    <button class="tab-button active" data-tab="requested">Requested Appointments</button>
    <button class="tab-button" data-tab="approved">Approved Appointments</button>
  </div>

  <div class="tab-content active" id="requested-tab">
    <h1 class="section-heading">Requested Student Appointments</h1>

    <ul class="students-list">
      <% @appointments.where(approved: false).each do |app| %>
        <div class="student-name"><%= app.student.user.name %></div>
        <li class="appointment-item">
          <span class="appointment-reason"><%= app.reason %></span>
          <%= link_to "View", hcc_view_particular_appointment_path(app.id), class: "view-button" %>
        </li>
      <% end %>
    </ul>
  </div>

  <div class="tab-content" id="approved-tab">
    <h1 class="section-heading">Approved Student Appointments</h1>

    <ul class="students-list">
      <% @students.each do |s| %>
        <li class="student-item">
          <% if s.appointments.present? %>
            <div class="student-name"><%= s.user.name %></div>
            <ul class="appointments-list">
              <% s.appointments.where(approved: true).each do |app| %>
                <li class="appointment-item">
                  <span class="appointment-reason"><%= app.reason %></span>
                  <%= link_to "View", hcc_view_particular_appointment_path(app.id), class: "view-button" %>
                </li>
              <% end %>
            </ul>
          <% end %>
        </li>
      <% end %>
    </ul>
  </div>

  <div class="back-link">
    <%= link_to "Back to Dashboard", root_path, class: "back-button" %>
  </div>
</div>

<style>
  /* General Styles */
  body {
    font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif;
    color: #333;
    line-height: 1.6;
    background-color: #f8f9fa;
    margin: 0;
    padding: 0;
  }

  .appointments-container {
    max-width: 1200px;
    margin: 2rem auto;
    padding: 0 1rem;
  }

  /* Tab Navigation */
  .tab-buttons {
    display: flex;
    margin-bottom: 2rem;
    border-bottom: 2px solid #ddd;
  }

  .tab-button {
    background: none;
    border: none;
    padding: 1rem 1.5rem;
    font-size: 1rem;
    font-weight: 600;
    color: #666;
    cursor: pointer;
    transition: all 0.3s ease;
    border-bottom: 3px solid transparent;
    margin-bottom: -2px;
  }

  .tab-button:hover {
    color: #163269;
  }

  .tab-button.active {
    color: #163269;
    border-bottom: 3px solid #163269;
  }

  /* Tab Content */
  .tab-content {
    display: none;
    animation: fadeIn 0.5s;
  }

  .tab-content.active {
    display: block;
  }

  /* Headings */
  .section-heading {
    font-size: 1.8rem;
    font-weight: bold;
    color: #163269;
    margin-bottom: 1.5rem;
    padding-bottom: 0.5rem;
    border-bottom: 1px solid #e9ecef;
  }

  /* Student Lists */
  .students-list {
    list-style-type: none;
    padding: 0;
    margin: 0;
  }

  .student-item {
    margin-bottom: 2rem;
    padding-bottom: 1.5rem;
    border-bottom: 1px solid #e9ecef;
  }

  .student-name {
    font-size: 1.3rem;
    font-weight: 600;
    margin-bottom: 1rem;
    color: #343a40;
    background-color: #e9ecef;
    padding: 0.5rem 1rem;
    border-radius: 4px;
  }

  /* Appointment Lists */
  .appointments-list {
    list-style-type: none;
    padding: 0;
    margin: 0 0 0 1rem;
  }

  .appointment-item {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 0.8rem 1rem;
    margin-bottom: 0.5rem;
    background-color: white;
    border-radius: 4px;
    box-shadow: 0 1px 3px rgba(0,0,0,0.1);
    transition: transform 0.2s ease;
  }

  .appointment-item:hover {
    transform: translateY(-2px);
    box-shadow: 0 3px 6px rgba(0,0,0,0.1);
  }

  .appointment-reason {
    flex-grow: 1;
  }

  /* Buttons */
  .view-button {
    display: inline-block;
    padding: 0.35rem 0.75rem;
    background-color: white;
    color: #163269;
    border: 1px solid #163269;
    border-radius: 4px;
    font-size: 0.875rem;
    text-decoration: none;
    transition: all 0.3s ease;
  }

  .view-button:hover {
    background-color: #163269;
    color: white;
  }

  .back-button {
    display: inline-block;
    padding: 0.5rem 1rem;
    background-color: #f8f9fa;
    color: #495057;
    border: 1px solid #ced4da;
    border-radius: 4px;
    text-decoration: none;
    font-weight: 500;
    margin-top: 2rem;
    transition: all 0.3s ease;
  }

  .back-button:hover {
    background-color: #e9ecef;
    color: #212529;
  }

  .back-link {
    margin-top: 2rem;
  }

  /* Animations */
  @keyframes fadeIn {
    from { opacity: 0; }
    to { opacity: 1; }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Get all tab buttons and tab contents
    const tabButtons = document.querySelectorAll('.tab-button');
    const tabContents = document.querySelectorAll('.tab-content');
    
    // Add click event to each tab button
    tabButtons.forEach(button => {
      button.addEventListener('click', function() {
        // Remove active class from all buttons and tabs
        tabButtons.forEach(btn => btn.classList.remove('active'));
        tabContents.forEach(content => content.classList.remove('active'));
        
        // Add active class to clicked button
        this.classList.add('active');
        
        // Show the corresponding tab content
        const tabId = this.getAttribute('data-tab');
        document.getElementById(`${tabId}-tab`).classList.add('active');
      });
    });

    // Check if there are no appointments and display message if needed
    const requestedTab = document.getElementById('requested-tab');
    const approvedTab = document.getElementById('approved-tab');
    
    checkEmptyTab(requestedTab, 'approved: false');
    checkEmptyTab(approvedTab, 'approved: true');
    
    function checkEmptyTab(tabElement, type) {
      const appointmentItems = tabElement.querySelectorAll('.appointment-item');
      if (appointmentItems.length === 0) {
        const noAppointmentsMsg = document.createElement('div');
        noAppointmentsMsg.className = 'no-appointments';
        noAppointmentsMsg.textContent = `No ${type === 'approved: false' ? 'requested' : 'approved'} appointments at this time.`;
        tabElement.appendChild(noAppointmentsMsg);
      }
    }
  });
</script>